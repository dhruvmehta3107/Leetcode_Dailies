class Solution {
public:
    int longestSubarray(vector<int>& nums) {
        int n = nums.size();
        int m = max_element(nums.begin(), nums.end())-nums.begin();
        int maxLen = 0, len = 0, maxEle = nums[m];

        for(int i = m ; i < n ; i++){
            if(nums[i] == maxEle){
                len++;
                maxLen = max(maxLen, len);
            }
            else len = 0;
        }
        return maxLen;
        // int maxVal = INT_MIN;
        // int streak = 0;
        // int result = 0;

        // for(auto num : nums){
        //     if(num > maxVal){
        //         maxVal = num;
        //         result = 0;
        //         streak = 0;
        //     }
        //     if(num == maxVal)streak++;
        //     else{
        //         streak = 0;
        //     }
        //     result = max(result, streak);
        // }
        // return result;
    }
};
